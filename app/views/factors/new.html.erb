<div>

6/14 朝異常はないけど変数がうまくいっていない
  
★結果★<br />
<div id="results" style="width: 100%; height: 200px; border: 1px dotted; padding: 10px; overflow-y: scroll;"></div>
</div>

<%= link_to '一覧へ戻る', '/factors'%>





<script type="text/javascript">

var content =["小牧市小松寺2丁目52番地","映画館","ファミリーレストラン","小牧市小松寺2丁目52"]

var destinationplace="小牧市小松寺2丁目52番地"

var counter = 1;

addressInput=content[0]

var selectedplace=""

var placesList=[]

var totalduration=[]
var totaldistance=[]






window.onload=function route(){








  for(var i=0; i<content.length-1;i++){
    if(i<content.length-2){
      getPlaces();
    }else{
      finalRoute();

    }
  }
}


function getPlaces(){
  //結果表示クリア
  console.log("--getPlaces----")

  document.getElementById("results").innerHTML = "";
  //placesList配列を初期化
  placesList = new Array();
  

  
  //検索場所の位置情報を取得
  var geocoder = new google.maps.Geocoder();
  geocoder.geocode(
    {
      address: addressInput
    },
    function(results, status) {

      selectedplace=results[0].geometry.location.lat()+","+results[0].geometry.location.lng()

     


      if (status == google.maps.GeocoderStatus.OK) {

  

     
        //取得した緯度・経度を使って周辺検索
        startNearbySearch(results[0].geometry.location);
      }
      else {
        alert(addressInput + "：位置情報が取得できませんでした。");
      }
    });

   
    
}



function startNearbySearch(latLng){
  console.log("--startNearbySearch----")

  
  //読み込み中表示
  document.getElementById("results").innerHTML = "Now Loading...";
  
  //Mapインスタンス生成
  var map = new google.maps.Map(
    document.createElement("div")
  );
  
  //PlacesServiceインスタンス生成
  var service = new google.maps.places.PlacesService(map);
  
  //入力したKeywordを取得
  var keywordInput = content[counter];


  counter+=1
  
  //周辺検索
  service.nearbySearch(
    {
      location: latLng,
      radius: 5000,
      keyword: keywordInput,
      
    },
    getRoute
  );
}




function getRoute(results,status){

  console.log("--getRoute----")

placesList = placesList.concat(results);

for (var i = 0; i < placesList.length; i++) {
    if(placesList[i].rating == undefined){
      placesList[i].rating = -1;
    }
  }

  placesList.sort(function(a,b){
    if(a.rating > b.rating) return -1;
    if(a.rating < b.rating) return 1;
    return 0;
  });

var place = placesList[0];
var name =place.name


var lat=place.geometry.location.lat()
var lng=place.geometry.location.lng()

var latlng=place.geometry.location.lat()+","+place.geometry.location.lng()





var directionsService = new google.maps.DirectionsService();


directionsService.route({
    origin:selectedplace,
    destination:latlng,
    travelMode:google.maps.DirectionsTravelMode.DRIVING,
}, pushArray
);

addressInput =name

}




function pushArray(response,status){
  console.log("--pushArray----")

var distance=response.routes[0].legs[0].distance.text;
var duration=response.routes[0].legs[0].duration.text;








var distandereplaced=distance.replace(',','.');
var distances = parseFloat(distandereplaced);
totaldistance.push(distances);


if(duration.includes('h')) {

    var result= duration.search('h');
    var search =result-1;
    var hours =  duration.charAt(search);
    var min =parseInt(hours);
    var mints = min*60;
    totalduration.push(mints);

   
    
  

}else{
    var mints = parseInt(duration);
    totalduration.push(mints);
    
  
}


}







function finalRoute(){

  console.log("--finalroute----")

var directionsService = new google.maps.DirectionsService();


directionsService.route({
    origin:"35.309341,136.976972",
    destination:"35.3102232,136.9466086",
    travelMode:google.maps.DirectionsTravelMode.DRIVING,
}, finalDisplayResults
);
}

 function finalDisplayResults(response,status){
  console.log("--finalroute----")


 var distance=response.routes[0].legs[0].distance.text;
var duration=response.routes[0].legs[0].duration.text;

var distandereplaced=distance.replace(',','.');
var distances = parseFloat(distandereplaced);
totaldistance.push(distances);


if(duration.includes('h')) {

    var result= duration.search('h');
    var search =result-1;
    var hours =  duration.charAt(search);
    var min =parseInt(hours);
    var mints = min*60;
    totalduration.push(mints);





}else{
    var mints = parseInt(duration);
    totalduration.push(mints);
   
}

var travelduration=sumArrayDuration(totalduration);


var traveldistance=sumArrayDisutance(totaldistance);


let words = '【総所要時間】'+travelduration+'\n'+'【総移動距離】'+traveldistance+'\n';

document.getElementById("results").innerHTML =words



 }



 const sumArrayDuration = array => {
  let sum = 0;
  for (let i = 0, len = array.length; i < len; i++) {
    var inidvisualtime=array[i]+60;
    sum += inidvisualtime
  }
  return sum;
};



const sumArrayDisutance = array => {
  let sum = 0;
  for (let i = 0, len = array.length; i < len; i++) {
    sum += array[i];
  }
  return sum;
};







</script>